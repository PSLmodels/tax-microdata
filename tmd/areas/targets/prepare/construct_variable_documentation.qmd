---
output: html_document
editor_options: 
 chunk_output_type: console
---


# Parse and show Congressional District data documentation

Note that we do not have number of exemptions, but we do have:

-   N1 -- number of returns

-   N2 -- number of individuals

Footnote 5 in the IRS documentation file (21incddocguide.docx), pertaining to N2, says:

> Beginning in 2018, personal exemption deductions were suspended for the primary, secondary, and dependent taxpayers. However, the data used to create the “Number of individuals”—filing status, dependent status indicator, and identifying dependent information—are still available on the Form 1040. This field is based on these data.


## Setup

```{r}
#| label: setup

source(here::here("R", "libraries.R"))
source(here::here("R", "constants.R"))

```


## Parse and save variable documentation

```{r}
#| label: parse-save-doc
#| output: false

doc1 <- read_excel(fs::path(CDRAW, CDDOCEXTRACT), sheet = "cleaned", range = "A2:D169")

doc2 <- doc1 |> 
  mutate(
    across(everything(),
           \(x) str_trim(x)),
    # clean reference field so that we can show line breaks in datatable
    reference = str_replace_all(reference,
                                coll("\r\n"),
                                 "<br>"
                                 )) |> 
  # determine whether variable is count, amount, or other
  mutate(vtype = case_when(
    vname %in% c("STATEFIPS", "STATE", "CONG_DISTRICT", "AGI_STUB") ~ "other",
    str_detect(description,
               coll("number of", ignore_case = TRUE)) ~ "count",
    str_detect(description, coll("amount", ignore_case = TRUE)) ~ "amount",
    # dollar amounts where description does not contain "amount"
    vname %in% c("A00100", "A02910", "A04475", "A11520", "A11530", "A18460") ~ "amount",
    .default = "ERROR")) |> 
  mutate(row = row_number()) |> 
  relocate(row)

# determine which variable names are part of a count-amount pair and get the base variable name
doc3 <- doc2 |> 
  mutate(suffix = ifelse(nchar(vname) == 6,
                         str_sub(vname, 2, -1),
                         NA_character_),
         suffix = ifelse(!is.na(as.integer(suffix)),
                         suffix,
                         NA_character_)) |> 
  arrange(suffix, vname) |> 
  mutate(nvars = n(), .by=suffix) |> 
  mutate(basevname= ifelse(nvars==2,
                           paste0("v", suffix),
                           NA_character_)) |> 
  select(-c(nvars, suffix)) |> 
  arrange(row)

write_csv(doc3, fs::path(CDINTERMEDIATE, "variable_documentation.csv"))

rm(doc1, doc2)

```


```{r}
#| label: check-doc
#| eval: false
#| output: false

# run some checks on the data interactively

doc2 <- read_csv(fs::path(CDINTERMEDIATE, "variable_documentation.csv"))
doc2 |> 
  filter(type != "Num")

count(doc2, vtype)

doc2 |> 
  filter(vtype=="ERROR")

doc2 |> 
  filter(vtype=="other")

# check these next 2 to be sure they are appropriate
countvars <- doc2 |> 
  filter(vtype=="count")

amountvars <- doc2 |> 
  filter(vtype=="amount")

rm(amountvars, countvars)

```


## Show variable documentation

Show documentation table for variables in the Congressional District csv data.

```{r}
#| label: show-doc

vdoc <- read_csv(fs::path(CDINTERMEDIATE, "variable_documentation.csv"))

vdoc |>
  select(-type) |> 
  DT::datatable(rownames = FALSE,
                options = list(order = list(0, "asc"), # use 1st column (0) for sorting
                               scrollX = TRUE, scrollY = TRUE, paging = TRUE, pageLength = 20,
                               autoWidth = TRUE),
                filter="top",
                escape = FALSE)

rm(vdoc)

```
