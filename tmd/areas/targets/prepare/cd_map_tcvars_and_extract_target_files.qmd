---
output: html_document
editor_options: 
 chunk_output_type: console
---

# Map tax calculator vars to soi vars and extract targets


```{r}
#| label: setup

source(here::here("R", "libraries.R"))
source(here::here("R", "constants.R"))

# 334283385.27000004 national pop


```

## Get needed data

```{r}
#| label: get-cdbasefile

cdbase <- read_csv(fs::path(CDINTERMEDIATE, "cdbasefile.csv"))

```

## Create variable mapping

```{r}
#| label: tc-soi-variablemap

soivars <- count(cdbase, basevname)
soivars$basevname

# the MARS mappings let us get counts by filing status by agi range
vmap <- read_csv(file="
tcvar, soivar
XTOT, XTOT
c00100, MARS1
c00100, MARS2
c00100, MARS4
c00100, v00100
e00200, v00200
e00300, v00300
e01700, v01700
e26270, v26270
")

```

```{r}
#| label: mapped-file

mapped <- cdbase |> 
  filter(basevname %in% vmap$soivar) |> 
  mutate(varname=factor(basevname, levels=vmap$soivar, labels=vmap$tcvar))

count(mapped, varname, vname)

```


```{r}
#| label: extracts

# varname,count,scope,agilo,agihi,fstatus,target
# XTOT,       0,    0,-9e99, 9e99,      0,  33e6
# e00300,     0,    1,-9e99, 9e99,      0,  20e9

# define extracts we want

phase4cds <- c("AK00", "DE00", "ID01", "ID02", "ME02", "MT00", "ND00", "PA08", "SD00", "WY00")
# statecds <- "NY21"

statecds <- phase4cds

extracted <- mapped |> 
  filter(statecd %in% statecds) |> 
  arrange(statecd, src, scope, fstatus, basevname, count, agistub) # to be safe

count(extracted, statecd)
count(extracted, basevname, varname)

targets <- extracted |> 
  filter(varname %in% c("XTOT", "c00100", "e00200", "e26270")) |> 
  filter(varname == "XTOT" | (agistub != 0)) |> 
  filter(!(count == 1 & (varname != "c00100"))) |> 
  select(statecd, varname, count, scope, agilo, agihi, fstatus, target)

check <- targets |> 
  filter(statecd == "AK00")

f <- function(data, group){
  cd <- group$statecd |> 
    str_to_lower()
  fname <- paste0(cd, "_targets.csv")
  fpath <- fs::path(CDFINAL, fname)
  print(fpath)
  write_csv(data, fpath)
}

targets |> 
  group_by(statecd) |> 
  group_walk(~f(.x, .y))


# write_csv(targets, fs::path(CDFINAL, "ny21_targets.csv"))


```



