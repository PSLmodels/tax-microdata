---
output: html_document
editor_options: 
 chunk_output_type: console
---

# Get Congressional District files for 2021

## Setup

```{r}
#| label: load-packages

library(DT)
library(fs)
library(readxl)
library(stringr)
library(tidyverse)
# includes: dplyr, forcats, ggplot2, lubridate, purrr, stringr, tibble, tidyr

tprint <- 75  # default tibble print
options(tibble.print_max = tprint, tibble.print_min = tprint) # show up to tprint rows

```

```{r}
#| label: constants

CDZIPURL <- "https://www.irs.gov/pub/irs-soi/congressional2021.zip"
CDDOCURL <- "https://www.irs.gov/pub/irs-soi/21incddocguide.docx"

CDDIR <- here::here("cds")
CDRAW <- fs::path(CDDIR, "raw_data")

CDDOCEXTRACT <- "cd_documentation_extracted_from_21incddocguide.docx.xlsx"

```

## Download CD data and documentation if not already downloaded

-   [SOI Congressional Districts landing page](https://www.irs.gov/statistics/soi-tax-stats-data-by-congressional-district)

    -   [2021 folder](https://www.irs.gov/statistics/soi-tax-stats-data-by-congressional-district-2021)

NOTE: To download data, change eval: to true in the header of the following chunk. Otherwise, this program assumes data already have been downloaded.

```{r}
#| label: downloads
#| eval: false

# data
fname <- fs::path_file(CDZIPURL)
download.file(url = CDZIPURL, destfile = fs::path(CDRAW, fname), mode = "wb")

# documentation
fname <- fs::path_file(CDDOCURL)
download.file(url = CDDOCURL, destfile = fs::path(CDRAW, fname), mode = "wb")

```

## Parse and show Congressional District data documentation

Note that we do not have number of exemptions, but we do have:

-   N1 -- number of returns

-   N2 -- number of individuals

Footnote 5 in the IRS documentation file says:

> Beginning in 2018, personal exemption deductions were suspended for the primary, secondary, and dependent taxpayers. However, the data used to create the “Number of individuals”—filing status, dependent status indicator, and identifying dependent information—are still available on the Form 1040. This field is based on these data.


```{r}
#| label: parse-doc
#| output: false

doc1 <- read_excel(fs::path(CDRAW, CDDOCEXTRACT), sheet = "cleaned", range = "A2:D169")

doc2 <- doc1 |> 
  mutate(
    across(everything(),
           \(x) str_trim(x)),
    # clean reference field so that we can show line breaks in datatable
    reference = str_replace_all(reference,
                                coll("\r\n"),
                                 "<br>"
                                 )) |> 
  # determine whether variable is count, amount, or other
  mutate(vtype = case_when(
    vname %in% c("STATEFIPS", "STATE", "CONG_DISTRICT", "AGI_STUB") ~ "other",
    str_detect(description,
               coll("number of", ignore_case = TRUE)) ~ "count",
    str_detect(description, coll("amount", ignore_case = TRUE)) ~ "amount",
    # dollar amounts where description does not contain "amount"
    vname %in% c("A00100", "A02910", "A04475", "A11520", "A11530", "A18460") ~ "amount",
    .default = "ERROR"))

doc2 |> 
  filter(type != "Num")

count(doc2, vtype)

doc2 |> 
  filter(vtype=="ERROR")

doc2 |> 
  filter(vtype=="other")

# check these next 2 to be sure they are appropriate
countvars <- doc2 |> 
  filter(vtype=="count")

amountvars <- doc2 |> 
  filter(vtype=="amount")

rm(amountvars, countvars, doc1)

```

Show documentation table for variables in the Congressional District csv data.

```{r}
#| label: show-doc

doc2 |> 
  mutate(row = row_number()) |> 
  relocate(row) |> 
  DT::datatable(rownames = FALSE,
                options = list(order = list(0, "asc"), 
                               autoWidth = TRUE), 
                escape = FALSE)

```

## Parse the Congressional District data

Clean the CD data and save as an rds file.

```{r}
#| label: parse-cddata
#| eval: false


# read the csv file from the zip archive that contains it
zpath <-  fs::path(CDRAW, fs::path_file(CDZIPURL))
con <- unz(zpath, "21incd.csv")
data <- read_csv(con)
close(con)

# data checks

count(data, STATE) # US, DC, and 50 states
count(data, CONG_DISTRICT) # max is 53
data |> 
  filter(STATE != "US") |> 
  select(STATE, CONG_DISTRICT) |> 
  distinct() |> 
  summarise(n=n(), .by=STATE) |> 
  janitor::adorn_totals() # how can we have 479 CDs??
  
check <- data |> 
  filter(STATE != "US") |> 
  select(STATE, CONG_DISTRICT) |> 
  distinct() |> 
  mutate(n=n(), .by=STATE)

nbystate <- check |> 
  select(STATE, n) |> 
  distinct()

data |> 
  filter(STATE != "US", agi_stub==0) |> 
  select(STATE, CONG_DISTRICT, N1) |> 
  arrange(desc(N1))

temp <- data |>
  select(1:5) |> 
  filter(STATE != "US", agi_stub==0) |> 
  mutate(ndists=n(), .by=STATE) |> 
  mutate(keep=(ndists == 1) | (CONG_DISTRICT != "00")) |> 
  filter(keep)


```


```{r}
#| label: clean-cddata
#| eval: false

dlong1 <- data |> 
  rename_with(toupper) |> 
  pivot_longer(cols = -c(1:4)) |> 
  left_join()



# create a cleaned, long, data frame
idvars <- c("stfips", "stabbr", "cd", "agistub")
dlong <- data |> 
  rename_with(tolower) |> 
  rename(stfips = "statefips",
         stabbr = "state",
         cd = "cong_district",
         agistub = "agi_stub") |> 
  pivot_longer(cols = -all_of(idvars))

```


