---
output: html_document
editor_options: 
 chunk_output_type: console
---

# Read tmd 2021, area targets, area weights and prepare data


## Setup

```{r}
#| label: setup
#| output: false

source(here::here("R", "libraries.R"))
source(here::here("R", "constants.R"))

phase4_statecds <- c("AK00", "DE00", "ID01", "ID02", "ME02", "MT00", "ND00", "PA08", "SD00", "WY00")

```


```{r}
#| label: functions
#| output: false

ns <- function(obj){
  sort(names(obj))
}

```

## Download files from google drive

```{r}

library(googledrive)
drive_auth() # authenticate

```


```{r}
#| label: download-files
#| eval: false

# /AFPI_2024/Phase 4
# folder_id <- "1pEdofaxeQgEeDLM8NOpo0vOGL1jT8Qa1" # AFPI folder
folder_id <- "1Z7ZWYTbldfuQCFbpqKi4Z8FYxkbwmhnu" # Phase 4 folder

files <- drive_ls(as_id(folder_id))
files

f <- function(gdfname){
  fpath <- here::here("temp_data", gdfname)
  print(fpath)
  drive_download(gdfname, path = fpath, overwrite = TRUE)
}
# f(files$name[[1]])

files |> 
  pull(name) |> 
  walk(\(gdfname) f(gdfname))

```

## Prepare target files

Get all targets prepared

```{r}
#| label: targets-all

# ~/Documents/python_projects/tax-microdata-benchmarking/tmd/areas/weights/examine   # project dir
# ~/Documents/python_projects/tax-microdata-benchmarking/tmd/areas/targets/prepare/cds/intermediate  # cdbasefile
HERE <- here::here()
CDTARGETSDIR <- fs::path(HERE, "..", "..", "targets", "prepare", "cds", "intermediate")
# list.files(CDTARGETSDIR)

targets_data <- read_csv(fs::path(CDTARGETSDIR, "cdbasefile.csv"))
glimpse(targets_data)

```


Get targets used in the optimization

```{r}
#| label: targets-used

targetfiles <- dir_ls(here::here("temp_data")) |> str_subset("targets.csv")

targets_used <- vroom(targetfiles, id="src") |> 
  mutate(src=path_file(src) |> str_sub(1, 4)) |> 
  mutate(active=!(str_sub(varname, 1, 1) == "#"),
         varname = ifelse(!active, 
                          varname |> str_remove("#") |> str_trim(),
                          varname))

glimpse(targets_used)
count(targets_used, src)
count(targets_used, active)
count(targets_used, varname)
count(targets_used, varname, active)

targets_used |> filter(src == "ak00")

```


## Get and prepare tmd data and area weights

```{r}
#| label: get-tmd-2021
#| output: false

fpath <-  fs::path(TMDDIR, "tmd_2021.csv")
tmd2021 <- read_csv(fpath)

sum(tmd2021$s006) # 184,024,650 s006 units are numbers of units, not hundreds of units

# con <- unz(zpath, "21incd.csv")
# data <- read_csv(con)

uswts <- read_csv(fs::path(TMDDIR, "tmd_weights.csv.gz"))
sum(uswts$WT2021) # 184,024,656.95 # must divide by 100


```


```{r}
#| label: prep-weights
#| output: false

# weightfiles <- dir_ls(here::here("temp_data")) |> str_subset("weights.csv.gz")
wtfiles <- dir_ls(WEIGHTSDIR, glob="*.gz") #  |> path_file()

df <- read_csv(wtfiles[1])
sum(df$WT2021)

weights <- vroom(wtfiles, id="src") |> 
  mutate(src = str_sub(path_file(src), 1, 4),
         across(-src, \(x) x / 100.))
glimpse(weights)
count(weights, src)

weights |> 
  select(src, WT2021) |> 
  summarise(wtdn=sum(WT2021), .by=src)

```

## Simple summaries

```{r}
#| label: prepdata-for-tables
#| output: false

ns(tmd2021)

# 0 = Total
# 1 = Under $1
# 2 = $1 under $10,000
# 3 = $10,000 under $25,000
# 4 = $25,000 under $50,000
# 5 = $50,000 under $75,000
# 6 = $75,000 under $100,000
# 7 = $100,000 under $200,000
# 8 = $200,000 under $500,000
# 9 = $500,000 or more


icuts <- c(-Inf, 1, 10e3, 25e3, 50e3, 75e3, 100e3, 200e3, 500e3, Inf)

# prep tmd
tmd2 <- tmd2021 |> 
  select(RECID, data_source, s006, c00100, e00200, iitax) |> 
  mutate(irange=cut(c00100, icuts, right = FALSE, ordered_result = TRUE),
         irange = factor(irange, 
                         levels = levels(irange), # Ensure ordering is maintained
                         labels = str_replace(levels(irange), ",", ", ")))
count(tmd2, irange)
glimpse(tmd2)
sum(tmd2$s006)

# prep weights
wts2 <- weights |> 
  select(src, WT2021) |> 
  mutate(row = row_number(), .by=src) |> 
  pivot_wider(names_from = src, values_from = WT2021)
wts2 |> summarise(across(-row, \(x) sum(x)))

areas <- c("us", unique(weights$src))
tmd3 <- tmd2 |> 
  bind_cols(wts2) |> 
  select(-row) |> 
  rename(us = s006) |> 
  pivot_longer(cols=all_of(areas),
               names_to = "area",
               values_to = "weight")

details <- tmd3 |> 
  summarise(n=n(), wtdn = sum(weight), 
            agi=sum(weight * c00100),
            wages = sum(weight * e00200),
            iitax = sum(weight * iitax),
            .by=c(irange, area)) |> 
  mutate(irange = fct_expand(irange, "total")) |> 
  mutate(irange = fct_relevel(irange, "total")) |> 
  arrange(area, irange)

count(details, irange)

areasums <- details |> 
  summarise(across(c(wtdn, agi, wages, iitax),
                   \(x) sum(x)),
            .by=area) |> 
  mutate(irange="total",
         irange = factor(irange, levels = levels(details$irange), ordered = TRUE))

tmd4 <- bind_rows(details, areasums) |> 
  arrange(area, irange)
count(tmd4, irange)
tmd4

```

## Selected tables

### Number of tax units

```{r}
#| label: tables-wtdn
#| output: true

tmd4 |>  
  select(irange, area, wtdn) |> 
  pivot_wider(names_from = area,
              values_from = wtdn) |> 
  relocate(us, .after = irange) |> 
  gt() |> 
  tab_header("Number of tax units, thousands, 2021 tax year",
             subtitle = "Filers and nonfilers") |> 
  fmt_number(columns = -c(irange, us),
             scale=1e-3,
             decimals = 1) |> 
    fmt_number(columns = us,
             scale=1e-3,
             decimals = 0)

# tmd4 |>  
#   filter(data_source==1) |> 
#   select(irange, area, wtdn) |> 
#   pivot_wider(names_from = area,
#               values_from = wtdn) |> 
#   relocate(us, .after = irange) |> 
#   gt() |> 
#   tab_header("Number of tax filers, thousands, 2021 tax year",
#              subtitle = "data_source==1") |> 
#   fmt_number(columns = -c(irange, us),
#              scale=1e-3,
#              decimals = 1) |> 
#     fmt_number(columns = us,
#              scale=1e-3,
#              decimals = 0)

```


### Percentage distribution of tax units

```{r}
#| label: tables-pctdist
#| output: true

tmd4 |> 
  mutate(pct=wtdn / wtdn[irange=="total"], 
         .by=area) |> 
  select(irange, area, pct) |> 
  pivot_wider(names_from = area,
              values_from = pct) |> 
  relocate(us, .after = irange) |> 
  gt() |> 
  tab_header("Number of tax units as % of area total, 2021 tax year",
             subtitle = "Filers and nonfilers") |> 
  fmt_percent(columns = -irange,
             decimals = 1)

```


### Average adjusted gross income

```{r}
#| label: tables-avgagi
#| output: true

tmd4 |> 
  select(-n) |> 
   mutate(across(c(agi, wages, iitax),
                \(x) x / wtdn)) |> 
  select(irange, area, value=agi) |> 
  pivot_wider(names_from = area,
              values_from = value) |> 
  relocate(us, .after = irange) |> 
  gt() |> 
  tab_header("Average AGI in $, 2021 tax year",
             subtitle = "Filers and nonfilers") |> 
  fmt_number(columns = -irange,
             decimals = 0)

```

### Average wages

```{r}
#| label: tables-avgwages
#| output: true

tmd4 |> 
  select(-n) |> 
   mutate(across(c(agi, wages, iitax),
                \(x) x / wtdn)) |> 
  select(irange, area, value=wages) |> 
  pivot_wider(names_from = area,
              values_from = value) |> 
  relocate(us, .after = irange) |> 
  gt() |> 
  tab_header("Average wages in $, 2021 tax year",
             subtitle = "Filers and nonfilers") |> 
  fmt_number(columns = -irange,
             decimals = 0)


```

### Average iitax

```{r}
#| label: tables-avgiitax
#| output: true

tmd4 |> 
  select(-n) |> 
   mutate(across(c(agi, wages, iitax),
                \(x) x / wtdn)) |> 
  select(irange, area, value=iitax) |> 
  pivot_wider(names_from = area,
              values_from = value) |> 
  relocate(us, .after = irange) |> 
  gt() |> 
  tab_header("Average iitax, 2021 tax year",
             subtitle = "Filers and nonfilers") |> 
  fmt_number(columns = -irange,
             decimals = 0)
  

```


